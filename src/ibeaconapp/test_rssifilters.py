from rssifilters import gmm_filter

import unittest

# rssi filter functions are injected in BeaconLocator instances
# they have to return the relevant rssi value from a list of rssi values 

class TestGMMFilter(unittest.TestCase):

    def setUp(self):
        self.filter = gmm_filter
        
        self.values0 = [1,2,2,3,3,3,4,4,5,6,6,7,7,7,8,8,9]
        self.values1 = [-1,-2,-2,-3,-3,-3,-4,-4,-5,-6,-6,-7,-7,-7,-8,-8,-9]
        self.values2 = [1,2,2,3,3,3,4,4,4,4,5,5,5,6,6,7,8,8,9,9,9,10,10,10,10,11,11,11,12,12,13]
        self.values3 = [-1,-2,-2,-3,-3,-3,-4,-4,-4,-4,-5,-5,-5,-6,-6,-7,-8,-8,-9,-9,-9,-10,-10,-10,-10,-11,-11,-11,-12,-12,-13]
        
        self.values_rssi_1m = [-47.0, -54.0, -54.0, -62.0, -48.0, -52.0, -47.0, -48.0, -48.0, -48.0, -55.0, -44.0, -75.0, -45.0, -64.0, -66.0, -65.0, -44.0, -49.0, -58.0, -58.0, -59.0, -62.0, -57.0, -51.0, -64.0, -60.0, -60.0, -44.0, -63.0, -44.0, -65.0, -61.0, -65.0, -51.0, -49.0, -49.0, -47.0, -54.0, -64.0, -54.0, -49.0, -49.0, -50.0, -45.0, -49.0, -47.0, -46.0, -47.0, -49.0, -64.0, -58.0, -50.0, -65.0, -50.0, -67.0, -50.0, -63.0, -47.0, -50.0, -47.0, -52.0, -47.0, -47.0, -69.0, -61.0, -44.0, -63.0, -48.0, -50.0, -62.0, -65.0, -47.0, -55.0, -64.0, -47.0, -61.0, -52.0, -64.0, -49.0, -50.0, -47.0, -49.0, -65.0, -61.0, -56.0, -44.0, -60.0, -62.0, -42.0, -48.0, -42.0, -49.0, -41.0, -60.0, -42.0, -55.0, -45.0, -42.0, -41.0, -41.0, -40.0, -56.0, -62.0, -43.0, -50.0, -68.0, -41.0, -63.0, -47.0, -42.0, -46.0, -58.0, -56.0, -40.0, -40.0, -56.0, -40.0, -56.0, -47.0, -57.0, -61.0, -42.0, -40.0, -41.0, -47.0, -41.0, -47.0, -56.0, -61.0, -40.0, -42.0, -55.0, -55.0, -39.0, -43.0, -39.0, -46.0, -56.0, -40.0, -43.0, -46.0, -56.0, -55.0, -43.0, -45.0, -55.0, -38.0, -59.0, -42.0, -42.0, -56.0, -39.0, -50.0, -59.0, -44.0, -47.0, -46.0, -48.0, -62.0, -46.0, -48.0, -45.0, -57.0, -46.0, -59.0, -49.0, -63.0, -46.0, -62.0, -45.0, -45.0, -58.0, -48.0, -59.0, -44.0, -64.0, -43.0, -81.0, -44.0, -68.0, -59.0, -65.0, -43.0, -53.0, -47.0, -59.0, -58.0, -75.0, -48.0, -63.0, -59.0, -63.0, -58.0, -47.0, -47.0, -48.0, -64.0, -49.0, -47.0, -42.0, -42.0, -43.0, -46.0, -46.0, -46.0, -57.0, -59.0, -48.0, -62.0, -42.0, -63.0, -51.0, -46.0, -76.0, -47.0, -47.0, -71.0, -42.0, -57.0, -69.0, -41.0, -61.0, -44.0, -47.0, -55.0, -62.0, -61.0]
        self.values_rssi_2m = [-43.0, -52.0, -47.0, -48.0, -47.0, -47.0, -47.0, -47.0, -50.0, -47.0, -48.0, -64.0, -59.0, -48.0, -45.0, -63.0, -58.0, -52.0, -65.0, -64.0, -56.0, -48.0, -50.0, -50.0, -48.0, -63.0, -50.0, -56.0, -50.0, -64.0, -48.0, -47.0, -49.0, -50.0, -47.0, -77.0, -51.0, -62.0, -50.0, -51.0, -49.0, -66.0, -50.0, -66.0, -55.0, -66.0, -64.0, -62.0, -54.0, -51.0, -47.0, -51.0, -65.0, -50.0, -66.0, -49.0, -57.0, -63.0, -50.0, -65.0, -63.0, -56.0, -63.0, -68.0, -49.0, -48.0, -54.0, -66.0, -48.0, -50.0, -48.0, -66.0, -54.0, -50.0, -65.0, -50.0, -49.0, -64.0, -50.0, -65.0, -66.0, -53.0, -48.0, -49.0, -63.0, -53.0, -56.0, -65.0, -48.0, -50.0, -49.0, -54.0, -65.0, -65.0, -63.0, -64.0, -62.0, -50.0, -62.0, -62.0, -62.0, -48.0, -49.0, -63.0, -50.0, -49.0, -50.0, -64.0, -48.0, -50.0, -65.0, -48.0, -47.0, -48.0, -50.0, -48.0, -53.0, -48.0, -50.0, -48.0, -50.0, -62.0, -48.0, -54.0, -50.0, -70.0, -63.0, -48.0, -50.0, -49.0, -65.0, -48.0, -48.0, -50.0, -64.0, -51.0, -49.0, -74.0, -66.0, -64.0, -50.0, -62.0, -51.0, -48.0, -47.0, -53.0, -48.0, -63.0, -48.0, -47.0, -65.0, -49.0, -48.0, -49.0, -48.0, -53.0, -62.0, -66.0, -48.0, -50.0, -63.0, -53.0, -48.0, -65.0, -48.0, -65.0, -62.0, -56.0, -48.0, -50.0, -52.0, -63.0, -62.0, -50.0, -62.0, -62.0, -48.0, -65.0, -64.0, -51.0, -53.0, -51.0, -49.0, -49.0, -61.0, -48.0, -52.0, -47.0, -47.0, -63.0, -63.0, -48.0, -56.0, -48.0, -51.0, -48.0, -45.0, -63.0, -46.0, -46.0, -48.0, -47.0, -47.0, -49.0, -46.0, -60.0, -48.0, -53.0, -47.0, -63.0, -60.0, -66.0, -47.0, -62.0, -51.0, -47.0, -47.0, -47.0]
        self.values_rssi_3m = [-65.0, -51.0, -49.0, -49.0, -60.0, -50.0, -54.0, -71.0, -77.0, -52.0, -62.0, -62.0, -71.0, -50.0, -55.0, -55.0, -57.0, -53.0, -65.0, -50.0, -68.0, -58.0, -54.0, -49.0, -54.0, -49.0, -51.0, -49.0, -67.0, -58.0, -65.0, -65.0, -50.0, -64.0, -61.0, -65.0, -65.0, -50.0, -50.0, -51.0, -50.0, -51.0, -66.0, -50.0, -51.0, -50.0, -50.0, -48.0, -50.0, -64.0, -61.0, -67.0, -50.0, -51.0, -50.0, -63.0, -50.0, -66.0, -59.0, -67.0, -50.0, -65.0, -49.0, -65.0, -54.0, -50.0, -66.0, -50.0, -51.0, -50.0, -50.0, -50.0, -49.0, -65.0, -55.0, -50.0, -49.0, -50.0, -50.0, -63.0, -50.0, -65.0, -62.0, -51.0, -66.0, -51.0, -49.0, -56.0, -58.0, -68.0, -50.0, -66.0, -50.0, -66.0, -68.0, -53.0, -55.0, -67.0, -55.0, -52.0, -53.0, -52.0, -52.0, -51.0, -72.0, -63.0, -66.0, -53.0, -54.0, -47.0, -69.0, -61.0, -47.0, -65.0, -71.0, -60.0, -53.0, -60.0, -53.0, -51.0, -69.0, -55.0, -51.0, -54.0, -62.0, -46.0, -47.0, -55.0, -61.0, -49.0, -46.0, -55.0, -55.0, -51.0, -62.0, -63.0, -69.0, -49.0, -53.0, -56.0, -61.0, -60.0, -48.0, -69.0, -46.0, -48.0, -60.0, -46.0, -70.0, -48.0, -46.0, -55.0, -61.0, -48.0, -54.0, -59.0, -49.0, -54.0, -45.0, -70.0, -46.0, -61.0, -68.0, -46.0, -46.0, -55.0, -47.0, -70.0, -48.0, -71.0, -70.0, -63.0, -70.0, -46.0, -56.0, -77.0, -67.0, -59.0, -53.0, -66.0, -56.0, -68.0, -62.0, -65.0, -67.0, -53.0, -59.0, -58.0, -57.0, -71.0, -67.0, -68.0, -55.0, -69.0, -55.0, -50.0, -70.0, -52.0]
        self.values_rssi_4m = [-51.0, -53.0, -70.0, -63.0, -55.0, -48.0, -52.0, -48.0, -59.0, -61.0, -66.0, -67.0, -58.0, -76.0, -57.0, -70.0, -59.0, -55.0, -55.0, -55.0, -55.0, -73.0, -58.0, -53.0, -54.0, -63.0, -71.0, -67.0, -56.0, -53.0, -71.0, -76.0, -57.0, -55.0, -71.0, -67.0, -75.0, -70.0, -69.0, -66.0, -52.0, -79.0, -69.0, -82.0, -62.0, -69.0, -68.0, -53.0, -69.0, -58.0, -64.0, -52.0, -69.0, -51.0, -67.0, -63.0, -68.0, -53.0, -58.0, -55.0, -67.0, -69.0, -53.0, -54.0, -68.0, -54.0, -53.0, -54.0, -62.0, -55.0, -69.0, -55.0, -54.0, -66.0, -64.0, -66.0, -72.0, -72.0, -70.0, -75.0, -53.0, -74.0, -68.0, -70.0, -68.0, -61.0, -58.0, -73.0, -67.0, -67.0, -72.0, -61.0, -66.0, -59.0, -67.0, -60.0, -67.0, -59.0, -67.0, -54.0, -56.0, -53.0, -51.0, -58.0, -76.0, -66.0, -52.0, -76.0, -60.0, -74.0, -68.0, -62.0, -66.0, -68.0, -50.0, -74.0, -67.0, -51.0, -66.0, -51.0, -62.0, -51.0, -60.0, -51.0, -52.0, -57.0, -51.0, -78.0, -56.0, -52.0, -65.0, -51.0, -60.0, -69.0, -67.0, -50.0, -61.0, -68.0, -73.0, -66.0, -52.0, -58.0, -66.0, -74.0, -65.0, -74.0, -51.0, -59.0, -72.0, -50.0, -52.0, -73.0, -50.0, -58.0, -50.0, -59.0, -67.0, -74.0, -69.0, -52.0, -66.0, -53.0, -57.0, -52.0, -66.0, -66.0, -60.0, -52.0, -50.0, -66.0, -69.0, -67.0, -51.0, -74.0, -51.0, -56.0, -73.0, -59.0, -52.0, -66.0, -52.0, -67.0, -66.0, -52.0, -73.0, -74.0, -66.0, -52.0, -76.0, -51.0, -69.0, -59.0, -53.0, -58.0, -68.0, -67.0, -67.0, -67.0, -52.0, -58.0]
        self.values_rssi_5m = [-64.0, -74.0, -58.0, -72.0, -67.0, -78.0, -65.0, -61.0, -61.0, -54.0, -72.0, -69.0, -61.0, -54.0, -72.0, -60.0, -54.0, -83.0, -61.0, -76.0, -69.0, -55.0, -55.0, -70.0, -63.0, -60.0, -69.0, -62.0, -72.0, -77.0, -54.0, -69.0, -70.0, -56.0, -78.0, -69.0, -62.0, -63.0, -55.0, -62.0, -55.0, -60.0, -63.0, -72.0, -55.0, -62.0, -55.0, -62.0, -70.0, -67.0, -55.0, -67.0, -70.0, -55.0, -62.0, -55.0, -74.0, -72.0, -63.0, -71.0, -75.0, -60.0, -72.0, -72.0, -57.0, -59.0, -56.0, -75.0, -75.0, -61.0, -54.0, -62.0, -61.0, -77.0, -59.0, -56.0, -74.0, -68.0, -72.0, -61.0, -56.0, -56.0, -60.0, -72.0, -59.0, -71.0, -74.0, -71.0, -60.0, -59.0, -60.0, -54.0, -54.0, -56.0, -69.0, -59.0, -61.0, -54.0, -62.0, -54.0, -62.0, -53.0, -56.0, -61.0, -54.0, -55.0, -60.0, -56.0, -55.0, -61.0, -65.0, -74.0, -73.0, -54.0, -79.0, -74.0, -54.0, -59.0, -54.0, -54.0, -70.0, -73.0, -71.0, -74.0, -54.0, -61.0, -68.0, -61.0, -72.0, -61.0, -70.0, -60.0, -68.0, -75.0, -55.0, -75.0, -74.0, -61.0, -74.0, -55.0, -54.0, -71.0, -68.0, -71.0, -75.0, -70.0, -55.0, -59.0, -55.0, -70.0, -74.0, -60.0, -71.0, -55.0, -70.0, -54.0, -74.0, -55.0, -62.0, -67.0, -68.0, -80.0, -58.0, -73.0, -62.0, -72.0, -65.0, -63.0, -58.0, -70.0, -68.0, -60.0, -58.0, -75.0, -59.0, -76.0, -61.0, -74.0, -72.0, -56.0, -75.0, -59.0, -81.0, -71.0]
        self.values_rssi_10m = [-75.0, -71.0, -56.0, -58.0, -59.0, -70.0, -68.0, -74.0, -71.0, -60.0, -69.0, -59.0, -70.0, -59.0, -55.0, -73.0, -60.0, -59.0, -78.0, -73.0, -55.0, -70.0, -56.0, -56.0, -57.0, -72.0, -74.0, -57.0, -56.0, -71.0, -57.0, -57.0, -57.0, -59.0, -71.0, -73.0, -54.0, -59.0, -54.0, -67.0, -70.0, -54.0, -61.0, -59.0, -55.0, -73.0, -61.0, -57.0, -60.0, -60.0, -71.0, -73.0, -57.0, -58.0, -59.0, -56.0, -59.0, -61.0, -68.0, -73.0, -74.0, -72.0, -59.0, -61.0, -70.0, -57.0, -55.0, -70.0, -57.0, -56.0, -57.0, -74.0, -57.0, -71.0, -74.0, -71.0, -73.0, -72.0, -57.0, -58.0, -62.0, -57.0, -60.0, -58.0, -72.0, -71.0, -72.0, -58.0, -66.0, -56.0, -53.0, -55.0, -53.0, -71.0, -53.0, -70.0, -57.0, -53.0, -73.0, -70.0, -56.0, -54.0, -61.0, -68.0, -70.0, -71.0, -55.0, -68.0, -55.0, -70.0, -70.0, -54.0, -69.0, -59.0, -68.0, -60.0, -55.0, -55.0, -55.0, -54.0, -70.0, -67.0, -70.0, -53.0, -57.0, -67.0, -70.0, -55.0, -69.0, -56.0, -58.0, -69.0, -60.0, -68.0, -70.0, -77.0, -55.0, -57.0, -62.0, -68.0, -56.0, -71.0, -56.0, -77.0, -77.0, -55.0, -62.0, -70.0, -63.0, -56.0, -61.0, -57.0, -60.0, -70.0, -64.0, -69.0, -55.0, -69.0, -74.0, -69.0, -54.0, -59.0, -71.0, -69.0, -54.0, -56.0, -74.0, -75.0, -54.0, -78.0, -55.0, -55.0, -68.0, -55.0, -76.0, -63.0, -55.0, -61.0, -61.0, -61.0, -61.0, -69.0, -53.0, -76.0, -54.0, -61.0, -61.0, -76.0, -55.0, -67.0, -55.0, -61.0]
        self.values_rssi_15m = [-71.0, -81.0, -75.0, -73.0, -64.0, -62.0, -64.0, -73.0, -74.0, -75.0, -65.0, -67.0, -72.0, -83.0, -76.0, -81.0, -67.0, -82.0, -60.0, -71.0, -68.0, -73.0, -76.0, -77.0, -78.0, -62.0, -78.0, -67.0, -61.0, -58.0, -63.0, -66.0, -62.0, -72.0, -80.0, -73.0, -79.0, -80.0, -62.0, -75.0, -65.0, -69.0, -66.0, -69.0, -67.0, -73.0, -64.0, -64.0, -67.0, -78.0, -65.0, -79.0, -69.0, -78.0, -68.0, -74.0, -58.0, -61.0, -61.0, -76.0, -62.0, -76.0, -62.0, -62.0, -62.0, -63.0, -66.0, -63.0, -78.0, -69.0, -76.0, -62.0, -78.0, -77.0, -62.0, -78.0, -78.0, -78.0, -66.0, -62.0, -62.0, -60.0, -66.0, -78.0, -78.0, -75.0, -69.0, -75.0, -61.0, -78.0, -74.0, -75.0, -63.0, -61.0, -79.0, -61.0, -66.0, -78.0, -65.0, -73.0, -62.0, -73.0, -69.0, -62.0, -75.0, -62.0, -61.0, -62.0, -61.0, -66.0, -74.0, -75.0, -69.0, -62.0, -75.0, -75.0, -77.0, -77.0, -61.0, -70.0, -78.0, -62.0, -62.0, -60.0, -61.0, -71.0, -67.0, -62.0, -66.0, -78.0, -70.0, -66.0, -73.0, -74.0, -87.0, -73.0, -60.0, -87.0, -85.0, -60.0, -61.0, -60.0, -66.0, -82.0, -69.0, -74.0, -64.0, -72.0, -74.0, -72.0, -73.0, -58.0, -72.0, -58.0, -71.0, -60.0, -71.0, -72.0, -74.0, -73.0, -59.0]
        self.values_rssi_20m = [-74.0, -67.0, -62.0, -76.0, -66.0, -66.0, -63.0, -78.0, -78.0, -75.0, -79.0, -65.0, -69.0, -78.0, -62.0, -71.0, -83.0, -74.0, -61.0, -84.0, -63.0, -71.0, -83.0, -78.0, -66.0, -78.0, -61.0, -79.0, -82.0, -63.0, -76.0, -72.0, -78.0, -76.0, -72.0, -77.0, -66.0, -83.0, -63.0, -83.0, -62.0, -62.0, -63.0, -71.0, -71.0, -68.0, -63.0, -71.0, -63.0, -63.0, -71.0, -66.0, -83.0, -77.0, -70.0, -68.0, -67.0, -62.0, -77.0, -71.0, -76.0, -76.0, -73.0, -85.0, -62.0, -76.0, -82.0, -76.0, -62.0, -70.0, -76.0, -70.0, -82.0, -83.0, -71.0, -67.0, -63.0, -62.0, -75.0, -68.0, -73.0, -76.0, -76.0, -68.0, -62.0, -74.0, -63.0, -83.0, -63.0, -68.0, -76.0, -71.0, -70.0, -64.0, -77.0, -67.0, -68.0, -62.0, -83.0, -62.0, -79.0, -62.0, -63.0, -70.0, -83.0, -78.0, -62.0, -63.0, -76.0, -76.0, -83.0, -79.0, -62.0, -70.0, -60.0, -82.0, -68.0, -82.0, -76.0, -71.0, -83.0, -71.0, -62.0, -76.0, -67.0, -77.0, -83.0, -76.0, -70.0, -62.0, -67.0, -70.0, -78.0, -64.0, -83.0, -65.0, -63.0, -73.0, -68.0, -59.0, -67.0, -73.0, -74.0, -66.0, -61.0, -78.0, -63.0, -78.0, -79.0, -76.0, -66.0, -58.0, -63.0, -62.0, -66.0, -66.0, -65.0, -60.0, -76.0, -78.0, -76.0, -66.0, -70.0, -69.0, -62.0, -66.0, -70.0, -79.0, -62.0, -77.0, -60.0, -67.0, -63.0, -68.0, -62.0, -79.0, -59.0, -75.0, -76.0, -67.0, -59.0, -70.0, -67.0, -61.0, -67.0, -76.0, -74.0, -67.0, -76.0, -74.0, -60.0, -67.0, -70.0, -67.0, -76.0, -75.0, -67.0, -65.0, -76.0, -62.0, -70.0, -76.0, -64.0, -78.0, -65.0, -80.0, -62.0, -67.0, -78.0, -67.0, -61.0, -67.0, -68.0, -62.0, -63.0, -66.0, -72.0]

    def test_result_type(self):
        value = self.filter(self.values0)
        self.assertIs(type(value), float)

    def test_precision_real_measurements(self):
        measurements = (
            (self.values_rssi_1m, -45.8),
            (self.values_rssi_2m, -48.7),
            (self.values_rssi_3m, -50.9),
            (self.values_rssi_4m, -52.4),
            (self.values_rssi_5m, -55.1),
            (self.values_rssi_10m, -55.6),
            (self.values_rssi_15m, -62.2),
            (self.values_rssi_20m, -62.4),
        )
    
        for rssi_list, expected in measurements:
            filtered = self.filter(rssi_list)
            if filtered < expected-1.5 or filtered > expected+1.5:
                raise ValueError("Expected GMM Filter result {0}, got {1}"\
                    .format(expected, filtered))

    def test_precision_custom_measurements(self):
        measurements = (
            (self.values0, 7),
            (self.values1, -3),
            (self.values2, 10),
            (self.values3, -4),
        )

        for rssi_list, expected in measurements:
            filtered = self.filter(rssi_list)
            if filtered < expected-0.15 or filtered > expected+0.15:
                raise ValueError("Expected GMM Filter result {0}, got {1}"\
                    .format(expected, filtered))
        

if __name__ == '__main__':
    unittest.main()
